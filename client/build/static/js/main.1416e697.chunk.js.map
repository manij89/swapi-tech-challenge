{"version":3,"sources":["context/Reducer.js","context/Store.jsx","helpers/apiClient.js","components/Spinner.js","styles/colorModes.js","components/ListContainer/SaveIcon.js","components/ListContainer/MovieTile.js","helpers/utils.js","components/ListContainer/ListContainer.js","containers/Home.js","components/Placeholder.js","containers/FavFilms.js","containers/FavCharacter.js","containers/FilmDetail.js","containers/CharacterDetail.js","components/Navbar/ColorModeSwitcher.js","components/Navbar/HamburgerMenu.js","components/Navbar/NavBar.js","App.js","reportWebVitals.js","serviceWorker.js","index.js","images lazy /^/.//.*/.jpg$/ groupOptions: {} namespace object","images/yoda.jpg","images/Yoda2.jpg","images/ligthST.svg","images/darkST.svg"],"names":["Reducer","state","action","type","allFilms","payload","allImages","prev","characterDetails","favoriteFilms","favoriteCharacters","clickedFilm","clickedChar","loading","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","fetchRequest","base","url","fetch","then","res","status","Promise","reject","json","catch","err","console","log","message","Spinner","my","color","height","width","timeout","bgColor","light","dark","textColor","bagdeBg","starColor","SaveIcon","handleSave","list","target","colormode","useColorMode","size","variant","fontSize","aria-label","colorScheme","icon","some","film","title","onClick","MovieTile","colorMode","useContext","useState","poster","setPoster","useEffect","episode_id","image","default","w","h","minHeight","mx","rounded","flexShrink","overflow","boxShadow","bg","as","ReachLink","to","src","alt","objectFit","p","isInline","align","px","alignItems","justifyContent","fontWeight","handleSaveFilm","newList","index","indexOf","item","splice","push","ls","set","ListContainer","data","id","m","overflowX","overflowY","flexWrap","length","map","key","Home","fallback","Placeholder","Yoda","minW","direction","textAlign","FavFilms","savedFilms","get","savedCharacters","Filmdetail","history","useHistory","getCharacters","useCallback","characters","char","characterId","reg","RegExp","charId","match","result","films","selectedFilm","find","f","opening_crawl","director","flexDirection","textTransform","letterSpacing","name","_hover","cursor","_active","extraInfoChar","c","wiki","handleClick","mt","Characterdetail","charFilms","setCharFilms","filter","includes","getCharMovies","goBack","hair_color","skin_color","birth_year","listStyleType","handleSaveCharacter","ColorModeSwitcher","props","toggleColorMode","text","useColorModeValue","svgSt","ligthST","darkST","marginRight","Hamburger","open","setOpen","className","e","zIndex","Navbar","backgroundColor","fontFamily","justifySelf","App","results","error","apiClient","d","theme","exact","path","component","render","routeProps","params","FavCharacter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","all","slice","t","keys","Object","module","exports"],"mappings":"4PAgDeA,EAhDC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BACFF,GADL,IAEEG,SAAUF,EAAOG,UAErB,IAAK,kBACH,OAAO,2BACFJ,GADL,IAEEK,UAAWJ,EAAOG,UAEtB,IAAK,WACH,IAAME,EAAI,YAAON,EAAMO,kBACvB,OAAO,2BACFP,GADL,IAEEO,iBAAiB,GAAD,mBAAMD,GAAN,CAAYL,EAAOG,YAEvC,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEQ,cAAeP,EAAOG,UAE1B,IAAK,eACH,OAAO,2BACFJ,GADL,IAEES,mBAAoBR,EAAOG,UAE/B,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEU,YAAaT,EAAOG,UAExB,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEW,YAAaV,EAAOG,UAExB,IAAK,cACH,OAAO,2BACFJ,GADL,IAEEY,QAASX,EAAOG,UAEpB,QACE,OAAOJ,ICxCPa,EAAe,CACnBV,SAAU,GACVE,UAAW,GACXE,iBAAkB,GAClBC,cAAe,GACfC,mBAAoB,GACpBC,YAAa,GACbC,YAAa,GACbC,SAAS,GAYEE,EAAUC,wBAAcF,GACtBG,EAVD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJC,qBAAWnB,EAASc,GADhB,mBACvBb,EADuB,KAChBmB,EADgB,KAE9B,OACE,kBAACL,EAAQM,SAAT,CAAkBC,MAAO,CAACrB,EAAOmB,IAC9BF,I,iBCdDK,EAAe,SAACC,EAAMC,GAAP,OACnBC,MAAM,GAAD,OAAIF,EAAJ,YAAYC,IACdE,MAAK,SAAAC,GAAG,OAAKA,EAAIC,QAAU,IAAMD,EAAME,QAAQC,OAAOH,MACtDD,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBC,OAAM,SAAAC,GACLC,QAAQC,IAAR,UAAeF,EAAIG,QAAnB,4BAA8CZ,Q,yDCLrC,SAASa,IACtB,OACE,kBAAC,IAAD,CAAQC,GAAI,IACV,kBAAC,IAAD,CACEpC,KAAK,OACLqC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,O,2ECbJC,EAAU,CAAEC,MAAO,UAAWC,KAAM,YACpCC,EAAY,CAAEF,MAAO,WAAYC,KAAM,YACvCE,EAAU,CAAEH,MAAO,WAAYC,KAAM,aACrCG,EAAY,CAAEJ,MAAO,WAAYC,KAAM,S,iBCGrC,SAASI,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC3CC,EAAcC,yBAAdD,UAER,OACE,oCACE,kBAAC,IAAD,CACEE,KAAK,KACLC,QAAQ,QACRC,SAAS,QACTC,aAAW,OACXC,YAAaX,EAAUK,GACvBO,KACET,EAAKU,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAAUX,EAAOW,SACtC,kBAAC,IAAD,MAEA,kBAAC,IAAD,MAGJC,QAASd,KCRF,SAASe,EAAT,GAA0C,IAArBH,EAAoB,EAApBA,KAAMZ,EAAc,EAAdA,WAChCgB,EAAcZ,yBAAdY,UAD8C,EAE5BC,qBAAWrD,GAFiB,mBAE/Cd,EAF+C,KAExCmB,EAFwC,OAG1BiD,mBAAS,IAHiB,mBAG/CC,EAH+C,KAGvCC,EAHuC,KAKtDC,qBAAU,WACR,MAAO,YAAgBT,EAAKU,WAA5B,SAA8C9C,MAAK,SAAA+C,GAAK,OACtDH,EAAUG,EAAMC,cAEjB,CAACZ,EAAKU,aAWT,OACE,kBAAC,IAAD,CACEG,EAAG,CAAC,QAAS,QAAS,QAAS,SAC/BC,EAAG,CAAC,MAAO,MAAO,MAAO,OACzBC,UAAU,QACVC,GAAG,OACHxC,GAAI,CAAC,OAAQ,OAAQ,OAAQ,QAC7ByC,QAAQ,KACRC,WAAW,IACXC,SAAS,SACTC,UAAU,KACVC,GAAIxC,EAAQuB,IAEXG,GACC,kBAAC,IAAD,CAAMe,GAAIC,IAAWC,GAAE,gBAAWxB,EAAKU,aACrC,kBAAC,IAAD,CACEe,IAAKlB,EACLmB,IAAI,mBACJC,UAAU,OACVd,EAAE,OACFC,EAAG,CAAC,MAAO,MAAO,MAAO,MACzBZ,QA9BU,WAClB7C,EAAS,CAAEjB,KAAM,cAAeE,SAAS,IACzCe,EAAS,CACPjB,KAAM,mBACNE,QAAQ,2BAAM0D,GAAP,IAAaO,OAAQA,MAE9BlD,EAAS,CAAEjB,KAAM,cAAeE,SAAS,QA6BvC,kBAAC,IAAD,CAAKsF,EAAG,GACN,kBAAC,IAAD,CAAOC,UAAQ,EAACC,MAAM,YACpB,kBAAC,IAAD,CAAOpC,QAAQ,QAAQuB,QAAQ,OAAOc,GAAI,EAAGV,GAAIpC,EAAQmB,IAAzD,YACYJ,EAAKU,aAGnB,kBAAC,IAAD,CAAMsB,WAAW,aAAaC,eAAe,iBAC3C,kBAAC,IAAD,CACEX,GAAG,KACHY,WAAW,OACXvC,SAAS,KACTnB,GAAI,EACJC,MAAOO,EAAUoB,IAEhBJ,EAAKC,OAER,kBAACd,EAAD,CACEC,WAAY,kBAAMA,EAAWY,IAC7BV,OAAQU,EACRX,KAAMnD,EAAMQ,mBC/EjB,IAAMyF,EAAiB,SAACnC,EAAMX,EAAMhC,GACzC,IAAM+E,EAAO,YAAO/C,GACdgD,EAAQD,EAAQE,QAAQtC,GAC1BoC,EAAQrC,MAAK,SAAAwC,GAAI,OAAIA,EAAKtC,QAAUD,EAAKC,SAAQmC,EAAQI,OAAOH,EAAO,GACtED,EAAQK,KAAKzC,GAClB3C,EAAS,CAACjB,KAAK,gBAAiBE,QAAS8F,IACzCM,IAAGC,IAAI,WAAYP,ICDN,SAASQ,EAAT,GAAkC,IAATC,EAAQ,EAARA,KAAQ,EACpBxC,qBAAWrD,GADS,mBACvCd,EADuC,KAChCmB,EADgC,KA6B9C,OACE,kBAAC,IAAD,CACEyF,GAAG,uBACHC,EAAE,OACFjC,EAAE,OACFkC,UAAU,SACVC,UAAU,SACVC,SAAS,UAERL,EAAKM,OAAS,GACbN,EAAKO,KAAI,SAAApD,GAAI,OACX,kBAACG,EAAD,CACEkD,IAAKrD,EAAKU,WACVV,KAAMA,EACNZ,WAAY,kBACV+C,EAAenC,EAAM9D,EAAMQ,cAAeW,UC9CzC,SAASiG,IAAQ,IAAD,EAELjD,qBAAWrD,GAAzBX,EAFmB,oBAEnBA,SAEV,OACE,oCACE,kBAAC,WAAD,CAAUkH,SAAU,kBAAChF,EAAD,OAClB,kBAACqE,EAAD,CAAeC,KAAMxG,MCRd,SAASmH,EAAT,GAAuC,IAAjBlF,EAAgB,EAAhBA,QAASmF,EAAO,EAAPA,KAEpCrD,EAAcZ,yBAAdY,UAER,OACE,kBAAC,IAAD,CACEsD,KAAK,QACL7C,EAAE,QACFC,EAAE,OACFG,QAAQ,KACRE,SAAS,SACTE,GAAIxC,EAAQuB,GACZuD,UAAU,SACV1B,eAAe,SACfD,WAAW,SACXZ,UAAU,MAEV,kBAAC,IAAD,CAAOK,IAAKgC,EAAM/B,IAAI,cACtB,kBAAC,IAAD,CACE/B,SAAS,KACTiC,EAAE,MACFgC,UAAU,SACVnF,MAAOO,EAAUoB,IAEjB9B,I,qBCnBO,SAASuF,IAAY,IAAD,EACPxD,qBAAWrD,GADJ,mBAC1Bd,EAD0B,KACnBmB,EADmB,KAUjC,OAPAoD,qBAAU,WACR,IAAMqD,EAAapB,IAAGqB,IAAI,YACtBD,GACFzG,EAAS,CAAEjB,KAAM,gBAAiBE,QAASwH,MAE5C,IAGD,kBAAC,IAAD,CAAQjD,EAAE,QAAQC,EAAE,OAAOiC,EAAE,KAC1B7G,EAAMQ,cAAcyG,OACnB,kBAACP,EAAD,CAAeC,KAAM3G,EAAMQ,gBAE3B,kBAAC8G,EAAD,CACEC,KAAMA,IACNnF,QAAS,kD,qBCjBJ,SAASuF,IAAY,IAAD,EAEPxD,qBAAWrD,GAFJ,mBAE1Bd,EAF0B,KAEnBmB,EAFmB,KAWjC,OAPAoD,qBAAU,WACR,IAAMuD,EAAkBtB,IAAGqB,IAAI,WAC5BC,GACD3G,EAAS,CAAEjB,KAAM,eAAgBE,QAAS0H,MAE3C,IAGD,kBAAC,IAAD,CAAQnD,EAAE,QAAQC,EAAE,OAAOiC,EAAE,KAC1B7G,EAAMS,mBAAmBwG,OACxB,kBAACP,EAAD,CAAeC,KAAM3G,EAAMS,qBAE3B,kBAAC6G,EAAD,CAAaC,KAAMA,IAAMnF,QAAS,qC,YCJ3B,SAAS2F,EAAT,GAAqC,IAAfvD,EAAc,EAAdA,WAAc,EACvBL,qBAAWrD,GADY,mBAC1Cd,EAD0C,KACnCmB,EADmC,KAEzC+C,EAAcZ,yBAAdY,UACF8D,EAAUC,cAEVC,EAAgBC,uBAAY,WAChCnI,EAAMU,YAAY0H,WAAWlB,KAAI,SAAAmB,GAC/B,IXPsBC,EWOhBC,EAAM,IAAIC,OAAO,OACjBC,EAASJ,EAAKK,MAAMH,IXRJD,EWUNG,EXTpBnH,EApBe,wBAoBH,iBAAqBgH,KWU1B5G,MAAK,SAAAiH,GAAM,OAAIxH,EAAS,CAAEjB,KAAM,WAAYE,QAASuI,YAEzD,CAAC3I,EAAMU,YAAY0H,aAEtB7D,qBAAU,WAGR,GAFApD,EAAS,CAAEjB,KAAM,cAAeE,SAAS,KAEpCJ,EAAMG,SAAS8G,OAAQ,CAC1B,IAAM2B,EAAQpC,IAAGqB,IAAI,YACrB,GAAIe,EAAO,CACTzH,EAAS,CAAEjB,KAAM,gBAAiBE,QAASwI,IAC3C,IAAMC,EAAeD,EAAME,MAAK,SAAAC,GAAC,OAAKA,EAAEvE,cAAgBA,KAClDqE,EACJ,MAAO,YAAaA,EAAarE,WAAjC,SAAmD9C,MAAK,SAAA+C,GAAK,OAC3DtD,EAAS,CACPjB,KAAM,mBACNE,QAAQ,2BAAMyI,GAAP,IAAqBxE,OAAQI,EAAMC,eAI9CsD,EAAQzB,KAAK,UAGfyB,EAAQzB,KAAK,KAIjBpF,EAAS,CAAEjB,KAAM,cAAeE,SAAS,MACxC,CAACJ,EAAMU,cAEV6D,qBAAU,WACHvE,EAAMY,SAA6C,IAAlCZ,EAAMO,iBAAiB0G,QACzCjH,EAAMU,YAAYqD,OAASmE,MAE9B,CAAClI,EAAMU,cAEV,IA/CiD,EA4DCV,EAAMU,YAAhD2D,EA5DyC,EA4DzCA,OAAQN,EA5DiC,EA4DjCA,MAAOiF,EA5D0B,EA4D1BA,cAAeC,EA5DW,EA4DXA,SACtC,OACE,qCACM5E,GAAUrE,EAAMY,QAEnB,kBAACyB,EAAD,MAEC,kBAAC,IAAD,CACE6G,cAAe,CAAC,SAAU,SAAU,MAAO,OAC3CpE,GAAG,OACHxC,GAAI,CAAC,OAAQ,OAAQ,OAAQ,QAC7ByC,QAAQ,KACRE,SAAS,SACTC,UAAU,KACVC,GAAIxC,EAAQuB,IAEZ,kBAAC,IAAD,CACE2C,EAAE,OACFtB,IAAKlB,EACLmB,IAAKzB,EACLa,EAAE,OACFD,EAAG,CAAC,MAAO,MAAO,MAAO,SAE3B,kBAAC,IAAD,CAAKe,EAAG,EAAGf,EAAE,QACX,kBAAC,IAAD,CAAOgB,UAAQ,EAACC,MAAM,YACpB,kBAAC,IAAD,CACEpC,QAAQ,QACR2B,GAAIpC,EAAQmB,GACZa,QAAQ,OACRc,GAAI,GAJN,WAMWrB,GAEX,kBAAC,IAAD,CACE2E,cAAc,YACd1F,SAAS,KACTlB,MAAM,WACN6G,cAAc,QAJhB,eAMeH,IAGjB,kBAAC,IAAD,CACE7D,GAAG,KACHY,WAAW,OACXvC,SAAS,SACTnB,GAAI,EACJC,MAAOO,EAAUoB,IAEhBH,GAEH,kBAAC,IAAD,CAAMxB,MAAOO,EAAUoB,GAAY8B,WAAW,QAAQvC,SAAS,MAC5DuF,GAEH,kBAAC,IAAD,CAAK1G,GAAI,GACNtC,EAAMO,iBAAiB2G,KAAI,SAAAmB,GAAI,OAC9B,kBAAC,IAAD,CACElB,IAAKkB,EAAKgB,KACV7F,QAAQ,SACRuB,QAAQ,OACRtB,SAAU,GACVlB,MAAOO,EAAUoB,GACjB2C,EAAG,EACHnB,EAAG,EACH4D,OAAQ,CAAEpE,UAAW,KAAMqE,OAAQ,WACnCC,QAAS,CAAEtE,UAAW,MACtBlB,QAAS,kBA/EL,SAAAqE,GAClBL,EAAQzB,KAAR,qBAA2B8B,EAAKgB,OAChC,IAAMI,EAAgBzJ,EAAMK,UAAUyI,MAAK,SAAAY,GAAC,OAAIA,EAAEL,OAAShB,EAAKgB,QAChElI,EAAS,CACPjB,KAAM,mBACNE,QAAQ,2BACHiI,GADE,IAEL5D,MAAOgF,EAAchF,MACrBkF,KAAMF,EAAcE,SAuEKC,CAAYvB,KAE1BA,EAAKgB,UAIZ,kBAAC,IAAD,CAAK3B,UAAU,UACb,kBAAC,IAAD,CACEnE,KAAK,KACLsG,GAAI,EACJtH,MAAM,QACN4C,GAAIpC,EAAQmB,GACZgB,UAAU,KACVlB,QAAS,kBACPiC,EACEjG,EAAMU,YACNV,EAAMQ,cACNW,IAGJmI,OAAQ,CAAEpE,UAAW,MACrBsE,QAAS,CAAEtE,UAAW,OAErBlF,EAAMQ,cAAcsI,MAAK,SAAAhF,GAAI,OAAIA,EAAKC,QAAUA,KAC7C,QACA,wB,aCvJL,SAAS+F,GAAT,GAAoC,IAATT,EAAQ,EAARA,KAAQ,EACtBlF,qBAAWrD,GADW,mBACzCd,EADyC,KAClCmB,EADkC,OAEdiD,mBAAS,IAFK,mBAEzC2F,EAFyC,KAE9BC,EAF8B,KAG1ChC,EAAUC,cACR/D,EAAcZ,yBAAdY,UAiBRK,qBAAU,WACRpD,EAAS,CAAEjB,KAAM,cAAeE,SAAS,IACrCJ,EAAMW,YAAY0I,KAjBF,WACpB,IACMV,GADO,YAAI3I,EAAMG,WAAaqG,IAAGqB,IAAI,aACvBoC,QAAO,SAAAlB,GAAC,OAAI/I,EAAMW,YAAYiI,MAAMsB,SAASnB,EAAEvH,QACnEwI,EAAarB,GAeXwB,GAEAnC,EAAQoC,SAEVjJ,EAAS,CAAEjB,KAAM,cAAeE,SAAS,MACxC,CAACJ,EAAMW,cA7BsC,MAsC5CX,EAAMW,YANR8D,EAhC8C,EAgC9CA,MACAkF,EAjC8C,EAiC9CA,KACAnH,EAlC8C,EAkC9CA,OACA6H,EAnC8C,EAmC9CA,WACAC,EApC8C,EAoC9CA,WACAC,EArC8C,EAqC9CA,WAEF,OACE,oCACGvK,EAAMY,QACL,kBAACyB,EAAD,MAEA,kBAAC,IAAD,CACE6G,cAAe,CAAC,SAAU,SAAU,MAAO,OAC3CpE,GAAG,OACHxC,GAAI,CAAC,OAAQ,OAAQ,OAAQ,QAC7ByC,QAAQ,KACRE,SAAS,SACTC,UAAU,KACVC,GAAIxC,EAAQuB,IAEZ,kBAAC,IAAD,CACE2C,EAAE,OACFtB,IAAKd,EACLe,IAAK6D,EACLzE,EAAE,OACFD,EAAG,CAAC,MAAO,MAAO,MAAO,SAE3B,kBAAC,IAAD,CAAKe,EAAG,EAAGf,EAAE,QACX,kBAAC,IAAD,CACES,GAAG,KACHY,WAAW,OACXvC,SAAS,SACTnB,GAAI,EACJC,MAAOO,EAAUoB,IAEhBmF,GAEH,kBAAC,IAAD,CAAemB,cAAc,QAC3B,kBAAC,IAAD,gBAAmBhI,GACnB,kBAAC,IAAD,oBAAuB6H,GACvB,kBAAC,IAAD,cAAiBC,GACjB,kBAAC,IAAD,oBAAuBC,GACvB,kBAAC,IAAD,mBACa,kBAAC,IAAD,KAAOZ,KAItB,kBAAC,IAAD,CAAKrH,GAAI,GACNyH,EAAU7C,KAAI,SAAA6B,GAAC,OACd,kBAAC,IAAD,CAAM3D,GAAIC,IAAWC,GAAE,gBAAWyD,EAAEvE,aAClC,kBAAC,IAAD,CACE2C,IAAK4B,EAAEhF,MACPP,QAAQ,SACRuB,QAAQ,OACRtB,SAAU,GACVoD,EAAG,EACHnB,EAAG,EACH4D,OAAQ,CAAEpE,UAAW,KAAMqE,OAAQ,WACnCC,QAAS,CAAEtE,UAAW,MACtBlB,QAAS,kBAhFPF,EAgFyBiF,OA/E3C,MAAO,YAAajF,EAAKU,WAAzB,SAA2C9C,MAAK,SAAA+C,GAAK,OACnDtD,EAAS,CACPjB,KAAM,mBACNE,QAAQ,2BAAM0D,GAAP,IAAaO,OAAQI,EAAMC,eAJpB,IAAAZ,IAkFDiF,EAAEhF,YAKX,kBAAC,IAAD,CAAK2D,UAAU,UACb,kBAAC,IAAD,CACEnE,KAAK,KACLsG,GAAI,EACJtH,MAAM,QACN4C,GAAIpC,EAAQmB,GACZgB,UAAU,KACVlB,QAAS,kBPpHU,SAACqE,EAAMlF,EAAMhC,GAC9C,IAAM+E,EAAO,YAAO/C,GACdgD,EAAQD,EAAQE,QAAQiC,GAC1BnC,EAAQrC,MAAK,SAAAwC,GAAI,OAAIA,EAAKgD,OAAShB,EAAKgB,QAAOnD,EAAQI,OAAOH,EAAO,GACpED,EAAQK,KAAK8B,GAClBlH,EAAS,CAACjB,KAAK,eAAgBE,QAAS8F,IACxCM,IAAGC,IAAI,UAAWP,GO+GFuE,CACEzK,EAAMW,YACNX,EAAMS,mBACNU,IAGJmI,OAAQ,CAAEpE,UAAW,MACrBsE,QAAS,CAAEtE,UAAW,OAErBlF,EAAMS,mBAAmBqI,MAAK,SAAAT,GAAI,OAAIA,EAAKgB,OAASA,KACjD,QACA,wB,4CCpHLqB,GAlBW,SAAAC,GAAU,IAC1BC,EAAmBtH,yBAAnBsH,gBACFC,EAAOC,4BAAkB,OAAQ,SACjCC,EAAQD,4BAAmBE,KAAQC,MAEzC,OACE,kBAAC,IAAD,eACEtG,EAAE,OACFC,EAAE,OACFlB,aAAA,oBAAyBmH,EAAzB,SACAK,YAAa,EACblH,QAAS4G,EACTrF,IAAKwF,GACDJ,K,OCbK,SAASQ,GAAUR,GAAQ,IAAD,EACfvG,oBAAS,GADM,mBAChCgH,EADgC,KAC1BC,EAD0B,KAE/BnH,EAAcZ,yBAAdY,UAOR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK0C,GAAG,aACN,kBAAC,IAAD,CAAKA,GAAG,SAAS0E,UAAWF,GAAQ,SAAUpH,QANhC,SAAAuH,GAClBF,GAASD,KAMH,kBAAC,IAAD,CAAKE,UAAU,YACf,kBAAC,IAAD,CAAKA,UAAU,YACf,kBAAC,IAAD,CAAKA,UAAU,iBAInB,kBAAC,IAAD,CAAKlG,GAAG,MAAMoG,OAAQ,EAAGF,UAAWF,EAAO,WAAa,OACtD,kBAAC,IAAD,CACEhG,GAAG,KACHzC,QAnBQ,CAAEC,MAAO,QAASC,KAAM,YAmBfqB,GACjB3B,MAnBU,CAAEK,MAAO,WAAYC,KAAM,YAmBpBqB,GACjBS,EAAE,QACFC,EAAE,QAEF,kBAAC,IAAD,CAAKQ,GAAG,KAAKkG,UAAU,SACrB,kBAAC,IAAD,CAAMhG,GAAG,KAAT,SAEF,kBAAC,IAAD,CAAKF,GAAG,KAAKkG,UAAU,OACrB,kBAAC,IAAD,CAAMhG,GAAG,aAAT,mBAEF,kBAAC,IAAD,CAAKF,GAAG,KAAKkG,UAAU,QACrB,kBAAC,IAAD,CAAMhG,GAAG,iBAAT,2BClCG,SAASmG,GAAOd,GAC7B,OACE,kBAAC,IAAD,CACE/F,EAAE,OACFmB,eAAe,gBACfD,WAAW,SACX4F,gBAAgB,eAEhB,kBAAC,IAAD,CAAKjI,SAAS,MACZ,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAMkI,WAAW,qBAAqBlI,SAAU,CAAC,EAAG,MAAO,MAAO,QAAlE,aAGA,kBAAC,GAAD,CAAmBmI,YAAY,cCiCtBC,OAvCf,WAAgB,IAAD,EAEM1H,qBAAWrD,GAAvBK,EAFM,oBASb,OALAoD,qBAAU,YhBJa,SAAApD,GACvBG,EAZe,wBAYQ,SACpBI,MAAK,SAAAiF,GACJxF,EAAS,CAAEjB,KAAM,gBAAiBE,QAASuG,EAAKmF,UAChDtF,IAAGC,IAAI,WAAYE,EAAKmF,YAEzB9J,OAAM,SAAAuJ,GAAC,OAAIrJ,QAAQ6J,MAAM,8BAA+BR,MgBDzDS,CAAoB7K,GhBMU,SAAAA,GAChCG,EAtBkB,2DAsBQ,YACvBI,MAAK,SAAAiF,GACJ,IAAMgC,EAAShC,EAAKO,KAAI,SAAA+E,GAAC,MAAK,CAC5B5C,KAAM4C,EAAE5C,KACR5E,MAAOwH,EAAExH,MACTkF,KAAMsC,EAAEtC,SAEVxI,EAAS,CAAEjB,KAAM,kBAAmBE,QAASuI,IAC7CnC,IAAGC,IAAI,YAAakC,MAErB3G,OAAM,SAAAuJ,GAAC,OAAIrJ,QAAQ6J,MAAM,uCAAwCR,MgBhBlES,CAA6B7K,KAC5B,IAGD,kBAAC,IAAD,CAAgB+K,MAAOA,KACrB,kBAACT,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWjF,IACjC,kBAAC,IAAD,CACE+E,OAAK,EACLC,KAAK,YACLE,OAAQ,SAAAC,GAAU,OAChB,oCACE,kBAAC,EAAD,CAAY/H,WAAY+H,EAAW7D,MAAM8D,OAAO5F,SAItD,kBAAC,IAAD,CACEuF,OAAK,EACLC,KAAK,mBACLE,OAAQ,SAAAC,GAAU,OAChB,oCACE,kBAAC,GAAD,CAAiBlD,KAAMkD,EAAW7D,MAAM8D,OAAOnD,WAIrD,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,YAAYC,UAAW1E,IACzC,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,gBAAgBC,UAAWI,OClCtCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlL,MAAK,YAAkD,IAA/CmL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCKMO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3E,MACvB,2D,OCRN4E,IAAShB,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,kBAAD,MACE,kBAAC,GAAD,SAIRiB,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjM,MAAK,SAAAkM,GACJA,EAAaC,gBAEd7L,OAAM,SAAA+J,GACL7J,QAAQ6J,MAAMA,EAAM3J,YC3G5BsK,M,mBC9BA,IAAIxF,EAAM,CACT,UAAW,CACV,IACA,GAED,UAAW,CACV,IACA,GAED,UAAW,CACV,IACA,GAED,UAAW,CACV,IACA,GAED,UAAW,CACV,IACA,GAED,UAAW,CACV,IACA,GAED,cAAe,CACd,IAED,aAAc,CACb,KAGF,SAAS4G,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE/G,EAAK6G,GAC9B,OAAOlM,QAAQqM,UAAUxM,MAAK,WAC7B,IAAI6J,EAAI,IAAI4C,MAAM,uBAAyBJ,EAAM,KAEjD,MADAxC,EAAE6C,KAAO,mBACH7C,KAIR,IAAI8C,EAAMnH,EAAI6G,GAAMnH,EAAKyH,EAAI,GAC7B,OAAOxM,QAAQyM,IAAID,EAAIE,MAAM,GAAGrH,IAAI8G,EAAoBzC,IAAI7J,MAAK,WAChE,OAAOsM,EAAoBQ,EAAE5H,EAAI,MAGnCkH,EAAoBW,KAAO,WAC1B,OAAOC,OAAOD,KAAKvH,IAEpB4G,EAAoBlH,GAAK,GACzB+H,EAAOC,QAAUd,G,mBClDjBa,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.1416e697.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_ALL_FILMS':\n      return {\n        ...state,\n        allFilms: action.payload,\n      };\n    case 'SET_CHAR_IMAGES':\n      return {\n        ...state,\n        allImages: action.payload,\n      };\n    case 'SET_CHAR':\n      const prev = [...state.characterDetails];\n      return {\n        ...state,\n        characterDetails: [...prev, action.payload],\n      };\n    case 'SET_FAV_FILMS':\n      return {\n        ...state,\n        favoriteFilms: action.payload,\n      };\n    case 'SET_FAV_CHAR':\n      return {\n        ...state,\n        favoriteCharacters: action.payload,\n      };\n    case 'SET_CLICKED_FILM':\n      return {\n        ...state,\n        clickedFilm: action.payload,\n      };\n    case 'SET_CLICKED_CHAR':\n      return {\n        ...state,\n        clickedChar: action.payload,\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, useReducer } from 'react';\nimport Reducer from './Reducer';\n\nconst initialState = {\n  allFilms: [],\n  allImages: [],\n  characterDetails: [],\n  favoriteFilms: [],\n  favoriteCharacters: [],\n  clickedFilm: {},\n  clickedChar: {},\n  loading: true,\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","/* eslint-disable no-console */\nimport ls from 'local-storage';\nconst swapiURL = 'https://swapi.dev/api';\nconst starwarsAPI = 'https://rawcdn.githack.com/akabab/starwars-api/0.2.1/api';\n\nconst fetchRequest = (base, url) =>\n  fetch(`${base}/${url}`)\n    .then(res => (res.status <= 400 ? res : Promise.reject(res)))\n    .then(res => res.json())\n    .catch(err => {\n      console.log(`${err.message} while fetching /${url}`);\n    });\n\nexport const getMovies = dispatch =>\n  fetchRequest(swapiURL, 'films')\n    .then(data => {\n      dispatch({ type: 'SET_ALL_FILMS', payload: data.results });\n      ls.set('allFilms', data.results);\n    })\n    .catch(e => console.error('Problem after getting films', e));\n\nexport const getCharacter = characterId =>\n  fetchRequest(swapiURL, `people/${characterId}`);\n\nexport const getCharacterImages = dispatch =>\n  fetchRequest(starwarsAPI, 'all.json')\n    .then(data => {\n      const result = data.map(d => ({\n        name: d.name,\n        image: d.image,\n        wiki: d.wiki,\n      }));\n      dispatch({ type: 'SET_CHAR_IMAGES', payload: result });\n      ls.set('allImages', result);\n    })\n    .catch(e => console.error('Problem after getting character info', e));\n","import React from 'react';\nimport { Center } from '@chakra-ui/react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spinner() {\n  return (\n    <Center my={10}>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </Center>\n  );\n}\n","export const bgColor = { light: 'gray.50', dark: 'gray.700' };\nexport const textColor = { light: 'teal.600', dark: 'gray.100' };\nexport const bagdeBg = { light: 'teal.300', dark: 'green.400' };\nexport const starColor = { light: 'gray.700', dark: 'white' };\n","import React from 'react';\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai';\nimport { IconButton, useColorMode } from '@chakra-ui/react';\nimport {starColor} from '../../styles/colorModes'\n\n\nexport default function SaveIcon({ handleSave, list, target }) {\n  const { colormode } = useColorMode();\n\n  return (\n    <>\n      <IconButton\n        size=\"lg\"\n        variant='ghost'\n        fontSize=\"1.7em\"\n        aria-label=\"Save\"\n        colorScheme={starColor[colormode]} \n        icon={\n          list.some(film => film.title === target.title) ? (\n            <AiFillStar />\n          ) : (\n            <AiOutlineStar />\n          )\n        }\n        onClick={handleSave}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Box,\n  Image,\n  Badge,\n  Text,\n  Stack,\n  Link,\n  useColorMode,\n  Flex,\n} from '@chakra-ui/react';\nimport { Link as ReachLink} from 'react-router-dom';\nimport { bgColor, textColor, bagdeBg } from '../../styles/colorModes';\nimport SaveIcon from './SaveIcon';\nimport { Context } from '../../context/Store';\n\nexport default function MovieTile({ film, handleSave }) {\n  const { colorMode } = useColorMode();\n  const [state, dispatch] = useContext(Context);\n  const [poster, setPoster] = useState('');\n\n  useEffect(() => {\n    import(`../../images/${film.episode_id}.jpg`).then(image =>\n      setPoster(image.default)\n    );\n  }, [film.episode_id]);\n\n  const handleClick = () => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({\n      type: 'SET_CLICKED_FILM',\n      payload: { ...film, poster: poster },\n    });\n    dispatch({ type: 'SET_LOADING', payload: false });\n  };\n\n  return (\n    <Box\n      w={['375px', '350px', '280px', '280px']}\n      h={['90%', '90%', '50%', '50%']}\n      minHeight=\"320px\"\n      mx=\"10px\"\n      my={['10px', '15px', '40px', '40px']}\n      rounded=\"md\"\n      flexShrink=\"0\"\n      overflow=\"hidden\"\n      boxShadow=\"md\"\n      bg={bgColor[colorMode]}\n    >\n      {poster && (\n        <Link as={ReachLink} to={`/film/${film.episode_id}`}>\n          <Image\n            src={poster}\n            alt=\"star wars poster\"\n            objectFit=\"fill\"\n            w=\"100%\"\n            h={['80%', '80%', '70%', '70']}\n            onClick={handleClick}\n          />\n        </Link>\n      )}\n\n      <Box p={5}>\n        <Stack isInline align=\"baseline\">\n          <Badge variant=\"solid\" rounded=\"full\" px={2} bg={bagdeBg[colorMode]}>\n            Episode {+film.episode_id}\n          </Badge>\n        </Stack>\n        <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n          <Text\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize=\"lg\"\n            my={2}\n            color={textColor[colorMode]}\n          >\n            {film.title}\n          </Text>\n          <SaveIcon\n            handleSave={() => handleSave(film)}\n            target={film}\n            list={state.favoriteFilms}\n          />\n        </Flex>\n      </Box>\n    </Box>\n  );\n}\n","import ls from 'local-storage';\n\nexport const handleSaveFilm = (film, list, dispatch) => {\n  const newList = [...list];\n  const index = newList.indexOf(film);\n  if (newList.some(item => item.title === film.title)) newList.splice(index, 1)\n  else newList.push(film);\n  dispatch({type:'SET_FAV_FILMS', payload: newList});\n  ls.set('favFilms', newList)\n}\n\nexport const handleSaveCharacter = (char, list, dispatch) => {\n  const newList = [...list];\n  const index = newList.indexOf(char);\n  if (newList.some(item => item.name === char.name)) newList.splice(index, 1)\n  else newList.push(char);\n  dispatch({type:'SET_FAV_CHAR', payload: newList});\n  ls.set('favChar', newList);\n  \n}\n\n","import React, { useContext } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport MovieTile from './MovieTile';\n// import CharacterTile from './CharacterTile';\nimport { handleSaveFilm} from '../../helpers/utils';\nimport { Context } from '../../context/Store';\n\nexport default function ListContainer({ data }) {\n  const [state, dispatch] = useContext(Context);\n\n  // const dataToDisplay = () => {\n  //   if (data === state.favoriteCharacters) {\n  //     return data.map(char => (\n  //       <CharacterTile\n  //         key={state.favoriteCharacters.name}\n  //         character={char}\n  //         handleSave={() =>\n  //           handleSaveCharacter(char, state.favoriteCharacters, dispatch)\n  //         }\n  //       />\n  //     ));\n  //   } else {\n  //     return data.map(film => (\n  //       <>\n  //         <MovieTile\n  //           key={film.episode_id}\n  //           film={film}\n  //           handleSave={() =>\n  //             handleSaveFilm(film, state.favoriteFilms, dispatch)\n  //           }\n  //         />\n  //       </>\n  //     ));\n  //   }\n  // };\n\n  return (\n    <Flex\n      id=\"background-container\"\n      m=\"10px\"\n      h=\"90vh\"\n      overflowX=\"scroll\"\n      overflowY=\"hidden\"\n      flexWrap=\"nowrap\"\n    >\n      {data.length > 0 &&\n        data.map(film => (\n          <MovieTile\n            key={film.episode_id}\n            film={film}\n            handleSave={() =>\n              handleSaveFilm(film, state.favoriteFilms, dispatch)\n            }\n          />\n        ))}\n    </Flex>\n  );\n}\n","import React, { useContext, Suspense } from 'react';\nimport { Context } from '../context/Store';\nimport Spinner from '../components/Spinner';\nimport ListContainer from '../components/ListContainer/ListContainer';\n\nexport default function Home() {\n\n  const [ { allFilms }] = useContext(Context);\n\n  return (\n    <>\n      <Suspense fallback={<Spinner />}>\n        <ListContainer data={allFilms} />\n      </Suspense>\n    </>\n  );\n}\n","import React from 'react';\nimport { Flex, Image, Text, useColorMode} from '@chakra-ui/react';\nimport {bgColor, textColor} from '../styles/colorModes';\n\nexport default function Placeholder({message, Yoda}) {\n\n  const { colorMode } = useColorMode();\n\n  return (\n    <Flex\n      minW=\"350px\"\n      w=\"350px\"\n      h=\"auto\"\n      rounded=\"md\"\n      overflow=\"hidden\"\n      bg={bgColor[colorMode]}\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      boxShadow=\"lg\"\n    >\n      <Image src={Yoda} alt=\"baby yoda\" />\n      <Text\n        fontSize=\"xl\"\n        p=\"5px\"\n        textAlign=\"center\"\n        color={textColor[colorMode]}\n      >\n       {message} \n      </Text>\n    </Flex>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/Store';\nimport { Center } from '@chakra-ui/react';\nimport ListContainer from '../components/ListContainer/ListContainer';\nimport ls from 'local-storage';\nimport Placeholder from '../components/Placeholder';\nimport Yoda from '../images/yoda.jpg';\n\nexport default function FavFilms() {\n  const [state, dispatch] = useContext(Context);\n\n  useEffect(() => {\n    const savedFilms = ls.get('favFilms');\n    if (savedFilms) {\n      dispatch({ type: 'SET_FAV_FILMS', payload: savedFilms });\n    }\n  }, []);\n\n  return (\n    <Center w=\"100vw\" h=\"90vh\" m=\"0\">\n      {state.favoriteFilms.length ? (\n        <ListContainer data={state.favoriteFilms} />\n      ) : (\n        <Placeholder\n          Yoda={Yoda}\n          message={'No favorite films yet you have. Yes, hrrmmm.'}\n        />\n      )}\n    </Center>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/Store';\nimport { Center } from '@chakra-ui/react';\nimport ListContainer from '../components/ListContainer/ListContainer';\nimport ls from 'local-storage';\nimport Placeholder from '../components/Placeholder';\nimport Yoda from '../images/Yoda2.jpg';\n\nexport default function FavFilms() {\n\n  const [state, dispatch] = useContext(Context);\n\n  useEffect(() => {\n    const savedCharacters = ls.get('favChar');\n    if(savedCharacters){\n      dispatch({ type: 'SET_FAV_CHAR', payload: savedCharacters });\n    }\n  }, []);\n\n  return (\n    <Center w=\"100vw\" h=\"90vh\" m=\"0\">\n      {state.favoriteCharacters.length ? (\n        <ListContainer data={state.favoriteCharacters} />\n      ) : (\n        <Placeholder Yoda={Yoda} message={'Hrrmmm, Your only favorite I am'} />\n      )}\n    </Center>\n  );\n}\n","/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useCallback } from 'react';\nimport { Context } from '../context/Store';\nimport {\n  Center,\n  Box,\n  Image,\n  Button,\n  Text,\n  Badge,\n  useColorMode,\n  Stack,\n} from '@chakra-ui/react';\nimport ls from 'local-storage';\nimport Spinner from '../components/Spinner';\nimport { bagdeBg, bgColor, textColor } from '../styles/colorModes';\nimport { handleSaveFilm } from '../helpers/utils';\nimport * as apiClient from '../helpers/apiClient';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Filmdetail({ episode_id }) {\n  const [state, dispatch] = useContext(Context);\n  const { colorMode } = useColorMode();\n  const history = useHistory();\n\n  const getCharacters = useCallback(() => {\n    state.clickedFilm.characters.map(char => {\n      const reg = new RegExp(/\\d+/);\n      const charId = char.match(reg);\n      apiClient\n        .getCharacter(charId)\n        .then(result => dispatch({ type: 'SET_CHAR', payload: result }));\n    });\n  }, [state.clickedFilm.characters]);\n\n  useEffect(() => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n\n    if (!state.allFilms.length) {\n      const films = ls.get('allFilms');\n      if (films) {\n        dispatch({ type: 'SET_ALL_FILMS', payload: films });\n        const selectedFilm = films.find(f => +f.episode_id === +episode_id);\n        if (!!selectedFilm) {\n          import(`../images/${selectedFilm.episode_id}.jpg`).then(image =>\n            dispatch({\n              type: 'SET_CLICKED_FILM',\n              payload: { ...selectedFilm, poster: image.default },\n            })\n          );\n        } else {\n          history.push('/');\n        }\n      } else {\n        history.push('/')\n      }\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: false });\n  }, [state.clickedFilm]);\n\n  useEffect(() => {\n    if (!state.loading && state.characterDetails.length === 0) {\n      !!state.clickedFilm.title && getCharacters();\n    }\n  }, [state.clickedFilm]);\n\n  const handleClick = char => {\n    history.push(`/character/${char.name}`);\n    const extraInfoChar = state.allImages.find(c => c.name === char.name);\n    dispatch({\n      type: 'SET_CLICKED_CHAR',\n      payload: {\n        ...char,\n        image: extraInfoChar.image,\n        wiki: extraInfoChar.wiki,\n      },\n    });\n  };\n\n  const { poster, title, opening_crawl, director} = state.clickedFilm;\n  return (\n    <>\n      { (!poster || state.loading) \n      ? (\n       <Spinner />\n      ) : (\n        <Center\n          flexDirection={['column', 'column', 'row', 'row']}\n          mx=\"10px\"\n          my={['10px', '15px', '40px', '40px']}\n          rounded=\"md\"\n          overflow=\"hidden\"\n          boxShadow=\"lg\"\n          bg={bgColor[colorMode]}\n        >\n          <Image\n            m=\"10px\"\n            src={poster}\n            alt={title}\n            h=\"auto\"\n            w={['60%', '50%', '50%', '50%']}\n          />\n          <Box p={5} w=\"100%\">\n            <Stack isInline align=\"baseline\">\n              <Badge\n                variant=\"solid\"\n                bg={bagdeBg[colorMode]}\n                rounded=\"full\"\n                px={2}\n              >\n                Episode {episode_id}\n              </Badge>\n              <Text\n                textTransform=\"uppercase\"\n                fontSize=\"sm\"\n                color=\"gray.500\"\n                letterSpacing=\"wide\"\n              >\n                Directed by {director}\n              </Text>\n            </Stack>\n            <Text\n              as=\"h2\"\n              fontWeight=\"bold\"\n              fontSize=\"1.5rem\"\n              my={2}\n              color={textColor[colorMode]}\n            >\n              {title}\n            </Text>\n            <Text color={textColor[colorMode]} fontWeight=\"light\" fontSize=\"md\">\n              {opening_crawl}\n            </Text>\n            <Box my={2}>\n              {state.characterDetails.map(char => (\n                <Badge\n                  key={char.name}\n                  variant=\"subtle\"\n                  rounded=\"full\"\n                  fontSize={13}\n                  color={textColor[colorMode]}\n                  m={1}\n                  p={1}\n                  _hover={{ boxShadow: 'md', cursor: 'pointer' }}\n                  _active={{ boxShadow: 'lg' }}\n                  onClick={() => handleClick(char)}\n                >\n                  {char.name}\n                </Badge>\n              ))}\n            </Box>\n            <Box textAlign=\"center\">\n              <Button\n                size=\"lg\"\n                mt={3}\n                color='white'\n                bg={bagdeBg[colorMode]}\n                boxShadow=\"sm\"\n                onClick={() =>\n                  handleSaveFilm(\n                    state.clickedFilm,\n                    state.favoriteFilms,\n                    dispatch\n                  )\n                }\n                _hover={{ boxShadow: 'md' }}\n                _active={{ boxShadow: 'lg' }}\n              >\n                {state.favoriteFilms.find(film => film.title === title)\n                  ? 'Saved'\n                  : 'Add to Favorites'}\n              </Button>\n            </Box>\n          </Box>\n        </Center>\n      )}\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  Center,\n  Image,\n  Box,\n  Link,\n  Badge,\n  UnorderedList,\n  ListItem,\n  Text,\n  Button,\n  useColorMode,\n} from '@chakra-ui/react';\nimport ls from 'local-storage';\nimport Spinner from '../components/Spinner';\nimport { useHistory, Link as ReachLink } from 'react-router-dom';\nimport { Context } from '../context/Store';\nimport { bagdeBg, bgColor, textColor } from '../styles/colorModes';\nimport { handleSaveCharacter } from '../helpers/utils';\n\nexport default function Characterdetail({ name }) {\n  const [state, dispatch] = useContext(Context);\n  const [charFilms, setCharFilms] = useState([]);\n  const history = useHistory();\n  const { colorMode } = useColorMode();\n\n  const getCharMovies = () => {\n    const list = [...state.allFilms] || ls.get('allFilms');\n    const result = list.filter(f => state.clickedChar.films.includes(f.url));\n    setCharFilms(result);\n  };\n\n  const handleClick = film => {\n    import(`../images/${film.episode_id}.jpg`).then(image =>\n      dispatch({\n        type: 'SET_CLICKED_FILM',\n        payload: { ...film, poster: image.default },\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    if (state.clickedChar.name) {\n      getCharMovies();\n    } else {\n      history.goBack();\n    }\n    dispatch({ type: 'SET_LOADING', payload: false });\n  }, [state.clickedChar]);\n\n  const {\n    image,\n    wiki,\n    height,\n    hair_color,\n    skin_color,\n    birth_year,\n  } = state.clickedChar;\n  return (\n    <>\n      {state.loading ? (\n        <Spinner />\n      ) : (\n        <Center\n          flexDirection={['column', 'column', 'row', 'row']}\n          mx=\"10px\"\n          my={['10px', '15px', '40px', '40px']}\n          rounded=\"md\"\n          overflow=\"hidden\"\n          boxShadow=\"lg\"\n          bg={bgColor[colorMode]}\n        >\n          <Image\n            m=\"10px\"\n            src={image}\n            alt={name}\n            h=\"auto\"\n            w={['60%', '50%', '50%', '50%']}\n          />\n          <Box p={5} w=\"100%\">\n            <Text\n              as=\"h2\"\n              fontWeight=\"bold\"\n              fontSize=\"1.5rem\"\n              my={2}\n              color={textColor[colorMode]}\n            >\n              {name}\n            </Text>\n            <UnorderedList listStyleType=\"none\">\n              <ListItem>Height: {height}</ListItem>\n              <ListItem>Hair Color: {hair_color}</ListItem>\n              <ListItem>Skin: {skin_color}</ListItem>\n              <ListItem>Birth year: {birth_year}</ListItem>\n              <ListItem>\n                More info: <Link>{wiki}</Link>\n              </ListItem>\n            </UnorderedList>\n\n            <Box my={2}>\n              {charFilms.map(f => (\n                <Link as={ReachLink} to={`/film/${f.episode_id}`}>\n                  <Badge\n                    key={f.title}\n                    variant=\"subtle\"\n                    rounded=\"full\"\n                    fontSize={13}\n                    m={1}\n                    p={1}\n                    _hover={{ boxShadow: 'md', cursor: 'pointer' }}\n                    _active={{ boxShadow: 'lg' }}\n                    onClick={() => handleClick(f)}\n                  >\n                    {f.title}\n                  </Badge>\n                </Link>\n              ))}\n            </Box>\n            <Box textAlign=\"center\">\n              <Button\n                size=\"lg\"\n                mt={3}\n                color=\"white\"\n                bg={bagdeBg[colorMode]}\n                boxShadow=\"sm\"\n                onClick={() =>\n                  handleSaveCharacter(\n                    state.clickedChar,\n                    state.favoriteCharacters,\n                    dispatch\n                  )\n                }\n                _hover={{ boxShadow: 'md' }}\n                _active={{ boxShadow: 'lg' }}\n              >\n                {state.favoriteCharacters.find(char => char.name === name)\n                  ? 'Saved'\n                  : 'Add to Favorites'}\n              </Button>\n            </Box>\n          </Box>\n        </Center>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Image, useColorMode, useColorModeValue} from '@chakra-ui/react';\nimport ligthST from '../../images/ligthST.svg';\nimport darkST from '../../images/darkST.svg';\n\nconst ColorModeSwitcher = props => {\n  const { toggleColorMode} = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const svgSt = useColorModeValue( ligthST,darkST);\n\n  return (\n    <Image\n      w='40px'\n      h='40px'\n      aria-label={`Switch to ${text} mode`}\n      marginRight={4}\n      onClick={toggleColorMode}\n      src={svgSt}\n      {...props}\n      />\n  );\n};\n\nexport default ColorModeSwitcher;\n","import React, { useState } from 'react';\nimport { Box, Flex, Stack, useColorMode } from '@chakra-ui/react';\nimport '../../styles/Hamburger.scss';\nimport { Link} from 'react-router-dom';\n\nexport default function Hamburger(props) {\n  const [open, setOpen] = useState(false);\n  const { colorMode } = useColorMode();\n  const bgColor = { light: 'white', dark: 'gray.900' };\n  const textColor = { light: 'teal.500', dark: 'gray.100' };\n\n  const handleClick = e => {\n    setOpen(!open);\n  };\n  return (\n    <Flex>\n      <Box id=\"container\">\n        <Box id=\"burger\" className={open && 'active'} onClick={handleClick}>\n          <Box className=\"bun top\"></Box>\n          <Box className=\"filling\"></Box>\n          <Box className=\"bun bottom\"></Box>\n        </Box>\n      </Box>\n\n      <Box as='nav' zIndex={2} className={open ? 'show nav' : 'nav'}>\n        <Stack\n          as=\"ul\"\n          bgColor={bgColor[colorMode]}\n          color={textColor[colorMode]}\n          w=\"100vw\"\n          h='90vh'\n        >\n          <Box as=\"li\" className=\"green\">\n            <Link to=\"/\">Home</Link>\n          </Box>\n          <Box as=\"li\" className=\"red\">\n            <Link to=\"/favFilms\">Favorite Films</Link>\n          </Box>\n          <Box as=\"li\" className=\"blue\">\n            <Link to=\"/favcharacter\">Favorite Characters</Link>\n          </Box>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n}\n","import React from 'react';\nimport { Flex, Box, Text } from '@chakra-ui/react';\nimport ColorModeSwitcher from './ColorModeSwitcher';\nimport HamburgerMenu from './HamburgerMenu';\n\nexport default function Navbar(props) {\n  return (\n    <Flex\n      h=\"10vh\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      backgroundColor=\"transparent\"\n    >\n      <Box fontSize=\"xl\">\n        <HamburgerMenu />\n      </Box>\n      <Text fontFamily=\"Audiowide, cursive\" fontSize={[0, '2xl', '3xl', '3xl']}>\n        STAR WARS\n      </Text>\n      <ColorModeSwitcher justifySelf=\"flex-end\" />\n    </Flex>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from 'react';\nimport { Context } from './context/Store';\nimport * as apiClient from './helpers/apiClient';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport FavFilms from './containers/FavFilms';\nimport FavCharacter from './containers/FavCharacter';\nimport FilmDetail from './containers/FilmDetail';\nimport CharacterDetail from './containers/CharacterDetail';\nimport Navbar from './components/Navbar/NavBar';\n\nfunction App() {\n\n  const [dispatch] = useContext(Context);\n\n  useEffect(() => {\n    apiClient.getMovies(dispatch);\n    apiClient.getCharacterImages(dispatch);\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/film/:id\"\n          render={routeProps => (\n            <>\n              <FilmDetail episode_id={routeProps.match.params.id} />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/character/:name\"\n          render={routeProps => (\n            <>\n              <CharacterDetail name={routeProps.match.params.name} />\n            </>\n          )}\n        />\n        <Route exact path=\"/favFilms\" component={FavFilms} />\n        <Route exact path=\"/favCharacter\" component={FavCharacter} />\n      </Switch>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript} from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport Store from './context/Store';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/styles/index.scss';\n\nReactDOM.render(\n  <StrictMode>\n    <Store>\n      <BrowserRouter>\n        <ColorModeScript />\n          <App />\n      </BrowserRouter>\n    </Store>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./1.jpg\": [\n\t\t169,\n\t\t4\n\t],\n\t\"./2.jpg\": [\n\t\t170,\n\t\t5\n\t],\n\t\"./3.jpg\": [\n\t\t171,\n\t\t6\n\t],\n\t\"./4.jpg\": [\n\t\t172,\n\t\t7\n\t],\n\t\"./5.jpg\": [\n\t\t173,\n\t\t8\n\t],\n\t\"./6.jpg\": [\n\t\t174,\n\t\t9\n\t],\n\t\"./Yoda2.jpg\": [\n\t\t64\n\t],\n\t\"./yoda.jpg\": [\n\t\t63\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 61;\nmodule.exports = webpackAsyncContext;","module.exports = __webpack_public_path__ + \"static/media/yoda.cad189e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yoda2.ca9658dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ligthST.945f9450.svg\";","module.exports = __webpack_public_path__ + \"static/media/darkST.347c93db.svg\";"],"sourceRoot":""}